<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
      
      <!--
      	DB접속을 위한 bean 등록하기
      	1. DB연결정보를 저장하는 클래스 -> BasicDataSource 클래스	
      	2. SqlSession을 생성해주는 클래스(환경설정) -> SqlSessionFactoryBean 클래스
      	3. SqlSession 클래스 -> SqlSessionTemplate 클래스
       -->
      
      <bean id="dataSource"
      	class="org.apache.commons.dbcp.BasicDataSource"
      	destroy-method="close">
      	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
      	<!-- <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/> -->
      	<property name="url" value="jdbc:oracle:thin:@14.36.141.71:8877:xe"/>
      	<property name="username" value="spring"/>
      	<property name="password" value="spring"/>
      </bean>
      
      <bean id="proxyDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
      	<constructor-arg index="0" ref="dataSource"/>
      	<property name="logFormatter">
      		<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
      			<property name="loggingType" value="MULTI_LINE"/>
      			<property name="sqlPrefix" value="[SQL]"/>          
      		</bean>
      	</property>
      </bean>
      
      
      <bean id="sqlSessionFactory"
      class="org.mybatis.spring.SqlSessionFactoryBean">
      	<property name="dataSource" ref="proxyDataSource"/> <!-- 위 dataSource 의존성 주입 -->
      	<property name="configLocation" value="classpath:mybatis-config.xml"/> 
      	<!-- config 경로 resource는 classpath안에 들어감 // classpath: 는 spring/target/classes 부터  -->
      	<property name="mapperLocations" value="classpath:mappers/**/*.xml"/> <!-- mapper 경로 -->
      </bean>
      
      <bean id="sqlSessionTemplate" 
      class="org.mybatis.spring.SqlSessionTemplate">
      	<constructor-arg index="0" ref="sqlSessionFactory"/>
      </bean>
      
      <!-- 트랜잭션 처리하기 -->
      <bean id="transactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="proxyDataSource"></property>
      </bean>
      
      <!-- 1. 어노테이션으로 트랜잭션 처리하기 -->
      <!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
      
      <!-- 2. xml방식으로 트랜잭션 처리하기 -->
      <tx:advice id="txadvice" transaction-manager="transactionManager">
      	<tx:attributes>
      		<tx:method name="insert*" /> <!-- 어떤 메소드 -->
      	</tx:attributes>
      </tx:advice>
      
      <aop:config>
      	<aop:pointcut expression="within(com.bs.spring.board.model.service.*Impl)" id="trans"/>
		<aop:advisor advice-ref="txadvice" pointcut-ref="trans"/>      	
      </aop:config>

		      
      
</beans>
