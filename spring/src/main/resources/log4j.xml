<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
	<!-- logger객체를 이용해서 log를 출력하는 방법에 대한 설정 
		1. appender 설정 -> 출력하는 방식, 출력패턴을 설정
		2. logger 설정 -> 출력대상이 되는 패키지 범위를 설정, 출력 level을 설정
	-->
	
	<!-- 콘솔에 로그 출력 -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out"/>
		<!-- <layout class="org.apache.log4j.SimpleLayout"/> 출력 패턴 설정 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" 
				value="%-5p [%d{yyyy=MM-dd HH:mm:ss}] : [%l] - %m%n"/>
				<!-- 이 로그가 찍힌 시간
				%-5p : 로그 레벨을 5자리로 맞추어 출력 
				%l : 로그 레벨
				%m : 메세지   
				%n : 개행
				-->
		</layout> <!-- 패턴 만들어서 로그 출력 -->
		
		<!-- <layout class="org.apache.log4j.HTMLLayout"></layout>  => HTML방식으로 로그 출력-->
		<!-- <layout class="org.apache.log4j.xml.XMLLayout"></layout> => XML방식으로 로그 출력 -->
		
	</appender>
	
	<!-- file출력 appender 등록하기 -->
	<appender name="fileAppender" class="org.apache.log4j.DailyRollingFileAppender">
    <param name="file" value="/Users/donghoon/log/spring-log.log"/> <!-- 어디 저장할지 -->
		<param name="append" value="true"/>
		<param name="datePattern" value="yyyy-MM-dd"/>
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" 
				value="%-5p [%d{yyyy=MM-dd HH:mm:ss}] : [%l] - %m%n"/>
		</layout>
	</appender>
	
	<!-- sqlAppender 등록 -->
	<appender name="sqlAppender" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
			 value="%-5p %m%n"/>
		</layout>
	</appender>
	
	<!-- sqlAppender 참조한 로거 등록  -->
	<logger name="jdbc.sqlonly" additivity="false">
		<level value="info"/>
		<appender-ref ref="sqlAppender"/>
	</logger>
	
	<logger name="jdbc.resultsettable" additivity="false">
		<level value="info"/>
		<appender-ref ref="sqlAppender"/>
	</logger>
	
	
	<logger name="com.bs.spring"> <!-- logger 설정해주면 root말고 설정한 level로 로그 출력  -->
		<level value="debug"/>
		<appender-ref ref="fileAppender"/> <!-- 여기에서만 fileAppender 사용 --> 
	</logger>
	
	<logger name="org.springframework.core"> <!-- core밑에 있는 거 다 출력 -->
		<level value="info"/>
	</logger>
	
	<logger name="org.springframework.beans"> <!-- beans밑에 있는 거 다 출력 -->
		<level value="info"/>
	</logger>
	
	<logger name="org.springframework.context">
		<level value="debug"/>
	</logger>
	
	<logger name="org.springframework.web">
		<level value="debug"/>
	</logger>
	
	<!-- name: appender의 이름을 지정합니다. 여기서는 "console"로 지정되어 있습니다.

class: 사용할 appender 클래스를 지정합니다. 이 예제에서는 콘솔에 출력하는 경우에는 org.apache.log4j.ConsoleAppender를 사용합니다.

param: appender에 전달할 추가적인 설정 값을 설정합니다. 여기서는 "Target"이라는 파라미터에 "System.out"을 전달하여 콘솔에 출력하도록 지정하고 있습니다.

layout: appender에서 사용할 로그 메시지의 출력 형식을 지정하는 부분입니다. PatternLayout을 사용하여 로그 메시지의 패턴을 정의할 수 있습니다. ConversionPattern에서는 로그 레벨(%-5p), 날짜([%d{yyyy=MM-dd HH:mm:ss}]), 위치([%l]), 메시지(%m), 개행(%n) 등을 지정하여 출력 형식을 정의합니다. -->
	
	<root>
		<priority value="warn"/> <!-- 주요한 것만 나오도록 -->
		<appender-ref ref="console"/> 
	</root>


</log4j:configuration>